//   Author: iLikeGothMommys
//	CONTRACT: THIRD CONTRACT
CONTRACT_TYPE
{
    name = Tourism_Interplanetary3Tourist
    group = InterplanetaryOrbit
	sortKey = 03.InterplanetaryOrbit3
	
    genericTitle = Ferry three tourists into orbit around another planet
    genericDescription = Ferry three tourists into orbit around another planet and bring them back safely.

    title = Ferry @TourismOverhaul:touristCount.Print() @TourismOverhaul:tourists into orbit around @targetBody
    description = @/interplanetaryMessagesNoLandingSingleTourst.Random()
    synopsis = Ferry three tourist to @targetBody and return them safely to @/homeWorldPlanet
    completedMessage = The @TourismOverhaul:tourists had a great time!

    // Level 1 prestige
    prestige = Exceptional
    targetBody = ReturnedFromBodies().Where(b => !b.IsSun() && b.HasSurface() && !b.IsHomeWorld() && b.Parent() != HomeWorld() && (b.Parent() == HomeWorld().Parent() || b.Parent().Parent() == HomeWorld().Parent()) && b.Parent().SemiMajorAxis() < 2845252514114).Random()

    // Contract rewards
    rewardFunds = 2000 + Random(0.0, 3000.0)
    rewardReputation = 8.0
    failureReputation = 22.0
	
	// Quickly Expire & Deadline
	minExpiry = 6.0
	maxExpiry = 25.0	
	deadline = Random(9372, 12780)
	
	//Contract: FIRST TOURIST
	PARAMETER
	{
		name = All
		type = All
		title = Complete @/randomKerbalName1's travel itinerary
	
		PARAMETER
		{
			name = VesselParameterGroup
			type = VesselParameterGroup
			
			title = Orbit @/targetBody
			PARAMETER
			{
				name = HasPassengers1
				type = HasPassengers
				kerbal = @/randomKerbalName1
				hideChildren = true
				hidden = true
			}

			PARAMETER
			{
				name = Orbit
				type = Orbit
				title = Orbit @/targetBody
				hideChildren = true
				hidden = true
				minPeA = @/targetBody.AtmosphereAltitude() + 1
			}
		}	
	
		PARAMETER
		{
			name = RecoverKerbal
			type = RecoverKerbal

			completeInSequence = true
			rewardFunds = 37000 + Random(4000.0, 6000.0)
			kerbal = @/randomKerbalName1	
		}
	}
	//contract: SECOND tourist
	PARAMETER
	{
		name = All
		type = All
		title = Complete @/randomKerbalName2's travel itinerary

		PARAMETER
		{
			name = VesselParameterGroup
			type = VesselParameterGroup
			
			title = Orbit @/targetBody
			PARAMETER
			{
				name = HasPassengers2
				type = HasPassengers
				kerbal = @/randomKerbalName2
				hideChildren = true
				hidden = true
			}

			PARAMETER
			{
				name = Orbit
				type = Orbit
				title = Orbit @/targetBody
				hideChildren = true
				hidden = true
				minPeA = @/targetBody.AtmosphereAltitude() + 1
			}
		}	
	
		PARAMETER
		{
			name = RecoverKerbal
			type = RecoverKerbal
		
			completeInSequence = true
			rewardFunds = 37000 + Random(4000.0, 6000.0)
			kerbal = @/randomKerbalName2
		}
	}
	//CONTRACT: THIRD kerbal
	PARAMETER
	{
		name = All
		type = All
		title = Complete @/randomKerbalName3's travel itinerary
		PARAMETER
		{
			name = VesselParameterGroup
			type = VesselParameterGroup
			
			title = Orbit @/targetBody
			PARAMETER
			{
				name = HasPassengers3
				type = HasPassengers
				kerbal = @/randomKerbalName3
				hideChildren = true
				hidden = true
			}

			PARAMETER
			{
				name = Orbit
				type = Orbit
				title = Orbit @/targetBody
				hideChildren = true
				hidden = true
				minPeA = @/targetBody.AtmosphereAltitude() + 1
			}
		}
	
		PARAMETER
		{
			name = RecoverKerbal
			type = RecoverKerbal
		
			completeInSequence = true
			rewardFunds = 37000 + Random(4000.0, 6000.0)
			kerbal = @/randomKerbalName3
		}
	}
	
	
	DATA
	{
		type = List<string>
		title = list of potential interplanetary messages for contracts that do not require landing.
		interplanetaryMessagesNoLandingSingleTourst = [ "A group of adventurous tourists has requested a trip to visit @/targetBody and return safely to @/homeWorldPlanet. This mission will give them a taste of interplanetary travel and showcase your expertise in crewed space exploration.", "A group of tourists has signed up for the adventure of a lifetime: a round trip to @/targetBody and back to @/homeWorldPlanet. They’re counting on you to deliver a safe, smooth, and unforgettable journey.", "A group of eager tourists has booked a journey to @/targetBody, with the promise of an unforgettable adventure and a safe return to @/homeWorldPlanet. Our expertise is needed to make this interplanetary trip a success.", "A group of tourists has reached out for a guided journey to @/targetBody and a safe return to @/homeWorldPlanet. This mission will be a great showcase for the reliability of our space program.", "A group of tourists has arranged a journey to @/targetBody, looking forward to an unforgettable trip through space and a safe return to @/homeWorldPlanet. They’re counting on our agency to deliver the adventure of a lifetime.", "A group of tourists is ready for a journey to @/targetBody, seeking an unforgettable adventure among the stars before returning safely to @/homeWorldPlanet. It’s up to our agency to make their dream a reality." ]
		hidden = true 
	}
	
	DATA
	{
		type = Kerbal
		title = randomly generates name for first tourist
		randomKerbalName1 = NewKerbal(Random(), @TourismOverhaul:prefixes.Random() + @TourismOverhaul:suffixes.Random() + " Kerman")
		hidden = true 
	}
	DATA
	{
		type = Kerbal
		title = randomly generates name for first tourist
		randomKerbalName2 = NewKerbal(Random(), @TourismOverhaul:prefixes.Random() + @TourismOverhaul:suffixes.Random() + " Kerman")
		hidden = true 
	}
	DATA
	{
		type = Kerbal
		title = randomly generates name for first tourist
		randomKerbalName3 = NewKerbal(Random(), @TourismOverhaul:prefixes.Random() + @TourismOverhaul:suffixes.Random() + " Kerman")
		hidden = true 
	}
	DATA 
	{
		type = CelestialBody
		hidden = true 
		homeWorldPlanet = HomeWorld()
	}
	DATA 
	{
		type = Duration 
		title = Duration Time generator
		hidden = true 
		durationTime = Random(7d, 14d)
	}
	
    BEHAVIOUR
    {
        name = SpawnPassengers1
        type = SpawnPassengers
		kerbal = @/randomKerbalName1
    }
	BEHAVIOUR
    {
        name = SpawnPassengers2
        type = SpawnPassengers
		kerbal = @/randomKerbalName2
    }
	BEHAVIOUR
    {
        name = SpawnPassengers3
        type = SpawnPassengers
		kerbal = @/randomKerbalName3
    }

    BEHAVIOUR
    {
        name = Expression
        type = Expression

        CONTRACT_COMPLETED_SUCCESS
        {
            TouristCount = TouristCount + @TourismOverhaul:touristCount
            TouristLowOrbitCount = TouristLowOrbitCount + @TourismOverhaul:touristCount
        }
    }

	REQUIREMENT
	{
		type = All
		name = All
		hideChildren = false
		
        REQUIREMENT
        {
            name = Reputation
            type = Reputation
			title = Reputation
            minReputation = 200
			title = Must have at least 200 reputation
        }
		REQUIREMENT 
		{
			name = FlyBy
			type = FlyBy
			checkType = MANNED
			title = Perform a manned fly-by of @/targetBody
			targetBody = @/targetBody
		}
		REQUIREMENT
		{
			name = Expression
			type = Expression
			expression = @TourismOverhaul:touristCount == 3
			title = Must have three tourists who are willing to book a tour with our agency
		}
	}
}