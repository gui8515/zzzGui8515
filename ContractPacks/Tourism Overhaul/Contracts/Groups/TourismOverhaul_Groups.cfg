//   Author: iLikeGothMommys

CONTRACT_GROUP
{
    name = TourismOverhaul
    displayName = Tourism
    minVersion = 1.22.0
	maxSimultaneous = 6
    disabledContractType = TourismContract
    DATA
    {
        type = List<AvailablePart>

        hidden = true

        crewableParts = AllParts().Where(p => p.CrewCapacity() > 0)
        unlockedParts = @crewableParts.Where(p => p.IsUnlocked())
    }

    DATA
    {
        type = bool

        hidden = true

        hasTwoSeatParts = @unlockedParts.Where(p => p.CrewCapacity() >= 2).Count() > 0
        hasFourSeatParts = @unlockedParts.Where(p => p.CrewCapacity() >= 4).Count() > 0

        moreThanOneTourist = @touristCount > 1
    }

    DATA
    {
        type = int

        hidden = true

        maxTourists = @hasFourSeatParts ? 4 : @hasTwoSeatParts ? 2 : 1
        touristCount = Random(1, @maxTourists)
    }
	
	DATA
    {
        type = int

        hidden = true

        maxTourists = @hasFourSeatParts ? 4 : @hasTwoSeatParts ? 2 : 1
        ContractRarity = Random(1, 12)
	ContractRarityCommon = Random(1, 4)
		LargeGroupGenerator = Random(8, 16)
    }


    DATA
    {
        type = string

        hidden = true

        tourists = @moreThanOneTourist ? "tourists" : "tourist"
        moreTourists = @moreThanOneTourist ? "More tourists" : "Another tourist"
    }
	
    DATA
    {
        type = List<string>
        title = Prefixes List
        prefixes = [ "Ad", "Al", "Ald", "An", "Bar", "Bart", "Bil", "Billy-Bob", "Bob", "Bur", "Cal", "Cam", "Chad", "Cor", "Dan", "Der", "Des", "Dil", "Do", "Don", "Dood", "Dud", "Dun", "Ed", "El", "En", "Er", "Fer", "Fred", "Gene", "Geof", "Ger", "Gil", "Greg", "Gus", "Had", "Hal", "Han", "Har", "Hen", "Her", "Hud", "Jed", "Jen", "Jer", "Joe", "John", "Jon", "Jor", "Kel", "Ken", "Ker", "Kir", "Lan", "Lem", "Len", "Lo", "Lod", "Lu", "Lud", "Mac", "Mal", "Mat", "Mel", "Mer", "Mil", "Mit", "Mun", "Ned", "Neil", "Nel", "New", "Ob", "Or", "Pat", "Phil", "Ray", "Rib", "Rich", "Ro", "Rod", "Ron", "Sam", "Sean", "See", "Shel", "Shep", "Sher", "Sid", "Sig", "Son", "Thom", "Thomp", "Tom", "Wehr", "Wil" ]
    }

    // Define Suffixes List
    DATA
    {
        type = List<string>
        title = Suffixes List
        suffixes = [ "ald", "bal", "bald", "bart", "bas", "berry", "bert", "bin", "ble", "bles", "bo", "bree", "brett", "bro", "bur", "burry", "bus", "by", "cal", "can", "cas", "cott", "dan", "das", "den", "din", "do", "don", "dorf", "dos", "dous", "dred", "drin", "dun", "ely", "emone", "emy", "eny", "fal", "fel", "fen", "field", "ford", "fred", "frey", "frid", "frod", "fry", "furt", "gan", "gard", "gas", "gee", "gel", "ger", "gun", "hat", "ing", "ke", "kin", "lan", "las", "ler", "ley", "lie", "lin", "lo", "lock", "long", "lorf", "ly", "mal", "man", "min", "ming", "mon", "more", "mund", "my", "nand", "nard", "ner", "ney", "nie", "ny", "oly", "ory", "rey", "rick", "rie", "righ", "rim", "rod", "ry", "sby", "sel", "sen", "sey", "ski", "son", "sted", "ster", "sy", "ton", "top", "trey", "van", "vey", "vin", "vis", "well", "wig", "win", "wise", "zer", "zon", "zor" ]
    }

	
	    CONTRACT_GROUP
    {
        // Name of the contract group
        name = Hotels
		displayName = Tourism (Hotels)
        // A child group with fewer completions allowed than the parent.
        maxSimultaneous = 4
    }
	
	CONTRACT_GROUP
    {
        // Name of the contract group
        name = LocalTourism
		displayName = Tourism (Local)
        // A child group with fewer completions allowed than the parent.
		
		CONTRACT_GROUP
		{
			// Name of the contract group
			name = LowOrbit
			displayName = Local Tourism - Low Orbit
			// A child group with fewer completions allowed than the parent.
		}
		CONTRACT_GROUP
		{
			// Name of the contract group
			name = MoonLanding
			displayName = Local Tourism - Moon Landings
			// A child group with fewer completions allowed than the parent.
		}
		CONTRACT_GROUP
		{
			// Name of the contract group
			name = MoonOrbit
			displayName = Local Tourism - Moon Orbit
			// A child group with fewer completions allowed than the parent.
		}
		CONTRACT_GROUP
		{
			// Name of the contract group
			name = LocalHistoricalSites
			displayName = Local Tourism - Historical Sites
			// A child group with fewer completions allowed than the parent.
		}
	
    }
	
	CONTRACT_GROUP
    {
        // Name of the contract group
        name = interplanetary
		displayName = Tourism (Interplanetary)
        // A child group with fewer completions allowed than the parent.
		
		CONTRACT_GROUP
		{
			// Name of the contract group
			name = InterplanetaryOrbit
			displayName = Interplanetary - Orbit
			// A child group with fewer completions allowed than the parent.
		}
		CONTRACT_GROUP
		{
			// Name of the contract group
			name = InterplanetaryLanding
			displayName = Interplanetary - Landing
			// A child group with fewer completions allowed than the parent.
		}
		CONTRACT_GROUP
		{
			// Name of the contract group
			name = InterplanetaryHistoricalSites
			displayName = Interplanetary - Historical Sites
			// A child group with fewer completions allowed than the parent.
		}
    }
	CONTRACT_GROUP
    {
        // Name of the contract group
        name = interstellar
		displayName = Tourism (Interstellar)
        // A child group with fewer completions allowed than the parent.
	
	CONTRACT_GROUP
		{
			// Name of the contract group
			name = interstellarFlyBy
			displayName = Interstellar - Fly-By
			// A child group with fewer completions allowed than the parent.
		}
		CONTRACT_GROUP
		{
			// Name of the contract group
			name = interstellarLanding
			displayName = Interstellar - Landing
			// A child group with fewer completions allowed than the parent.
		}
    }
	
}
