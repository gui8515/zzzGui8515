CONTRACT_TYPE
{
    // Unique name of the contract type (required)
    // <MOD>-<GROUP>-<SUB-GROUP>-<CONTRACT>
    name = ExampleContract-Example1-SimpleContract1
    title = Orbit @/targetBody1
    group = Example1
	genericTitle = #LOC_ExampleContract_Contract_Example1_SimpleContract1_GenericTitle 
	description = #LOC_ExampleContract_Contract_Example1_SimpleContract1_Description
    genericDescription = #LOC_ExampleContract_Contract_Example1_SimpleContract1_GenericDescription
    synopsis = #LOC_ExampleContract_Contract_Example1_SimpleContract1_Synopsis
    completedMessage = #LOC_ExampleContract_Contract_Example1_SimpleContract1_CompletedMessage
    minExpiry = 1
    maxExpiry = 7
    deadline = 0
    cancellable = true
    declinable = true
    prestige = Exceptional
    targetBody = @/targetBody1
    rewardScience = 3
    rewardReputation = 6
    rewardFunds = 44000.0
    failureReputation = 0.0
    failureFunds = 0.0
    advanceFunds = 0.0

	DATA
	{
		type = CelestialBody
		uniquenessCheck = CONTRACT_ACTIVE
		targetBody1 =  HomeWorld().HaveOrbited() ? ReachedBodies().Where(r => !r.HaveOrbited()).SelectUnique() : HomeWorld()
		title = #LOC_ExampleContract_Contract_Example1_SimpleContract1_TargetBody1_Title
	}


	PARAMETER
	{
		name = ReachState
		type = ReachState
		situation = ORBITING
		disableOnStateChange = true
		title = #LOC_ExampleContract_Contract_Example1_SimpleContract1_ReachState_Title
	}

	
    REQUIREMENT
    {
        name = ReachOrbit
        type = Orbit
		targetBody = @/targetBody1
		invertRequirement = true
		title = #LOC_ExampleContract_Contract_Example1_SimpleContract1_Requirement_ReachOrbit_Title
    }
}
