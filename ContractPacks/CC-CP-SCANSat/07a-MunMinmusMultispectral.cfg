CONTRACT_TYPE
{
	// Any suggestions or corrections? Send me a note on http://forum.kerbalspaceprogram.com/members/118151-DBT85
	// This contract only work with Contract Configurator and SCANsat 9.0

    name = ScanMunMinmusMultispectral
    group = CCCP-SCANsat

	// Contract text
	title = Varredura Multiespectral de Mun e Minmus
	description = Depois de todo o trabalho que você fez descobrindo biomas aqui em casa, começamos a nos perguntar se não há também biomas diferentes nas nossas luas. Envie algumas naves para descobrir e faça isso rapidamente.
	synopsis = Envie um par de naves não tripuladas para órbitas ao redor de nossas luas e escaneie ambas as superfícies com o Sensor Multiespectral SCAN. Para Mun, uma órbita sugerida é 234.1 km com inclinação de 87.1 graus. Para Minmus, acreditamos que uma órbita de 273.9 km com inclinação de 44.4 graus deve funcionar. \n\nVocê também pode ter Maxwell II e Maxwell III em suas respectivas órbitas ao redor das luas. Se puder, desorbite‑os e ajude a manter o espaço limpo.
	notes = Dica: Sempre complete a parte opcional antes da principal, se decidir aceitar o desafio!\nDica: Provavelmente há outros equipamentos científicos que você pode levar para obter ciência extra!\nDica: Não esqueça de analisar os dados da sua varredura quando concluída para obter ciência adicional!
	completedMessage = Como suspeitávamos, Mun e Minmus estão repletos de biomas diferentes. Deve haver uma riqueza de ciência a ser coletada em cada um! Acreditamos que, com a nave e a tripulação certas, pelo menos 11 de Ciência podem ser obtidos.

    // Target Celestial body - controls where the contract must be completed, has some automated
    // effects on numeric parameters (increasing science, etc.)
	targetBody = Mun
	
	// Always offered by the R&D department
	agent = Departamento de Pesquisa e Desenvolvimento
	
    // Contract rewards
    advanceFunds = 13500
	rewardScience = 11
	rewardReputation = 12
    rewardFunds = 27000

	// Can only be done once
	maxCompletions = 1
	maxSimultaneous = 1
	
	// Prestige level 2
	prestige = Significant
	
	PARAMETER
	{
		// Named for the GeoEye satellite launched in 2008
		name = GeoEye2
		type = VesselParameterGroup

		define = GeoEye II
		
		PARAMETER
		{
			name = ReachState
			type = ReachState
			targetBody = Mun
			situation = ORBITING
		}
			
		PARAMETER
		{
			name = HasCrew1
			type = HasCrew
			maxCrew = 0
			minCrew = 0
		}
		
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			part = SCANsat_Scanner24
		}
	}	 
	
	PARAMETER
	{
		name = OrbitSet
		type = VesselParameterGroup
		
		vessel = GeoEye II
		
		title = Achieve an orbit with the following parameters
		optional = True
		completedMessage = Ohh Myyyy, course laid in Captain!!!
		
		// Parameter rewards
		rewardScience = 2.5
		rewardReputation = 2
		rewardFunds = 4500
	
		PARAMETER
		{
			name = Orbit
			type = Orbit
			targetBody = Mun
			minApA = 232223
			maxApA = 236341
			minPeA = 232165
			maxPeA = 236247
			maxEccentricity = 0.00201
				title = Alcance uma órbita com os seguintes parâmetros
				optional = True
				completedMessage = Órbita perfeita, rumo traçado Capitão!!!
		}
	}
	
	PARAMETER
	{
		name = SCANsatCoverage1
		type = SCANsatCoverage
		targetBody = Mun
		
		// Get 50% coverage to complete
		coverage = 50.0
		scanType = Biome
		disableOnStateChange = false
	}
	
	PARAMETER
	{
		name = OrbitEndGrp
        type = All

        title = De-Orbit Maxwell II, our previous SCANSat around Mun
        optional = True
		
		// Parameter rewards
        rewardScience = 2
        rewardFunds = 4000
	
		        title = Desorbitar o Maxwell II, nosso SCANsat anterior ao redor de Mun
		{
			name = OrbitEnd
			type = VesselParameterGroup
			vessel = Maxwell II

			PARAMETER
			{
			    name = VesselDestroyed
			    type = VesselDestroyed
			}
		}
	}
	
	// second part of mission starts here	
	PARAMETER
	{
		
		// Named for the GeoEye satellite launched in 2008
		name = GeoEye3
		type = VesselParameterGroup

		define = GeoEye III
		
		PARAMETER
		{
			name = ReachState
			type = ReachState
			targetBody = Minmus
			situation = ORBITING
				completedMessage = Órbita perfeita, comecem a escanear agora!
	
		PARAMETER
		{
			name = HasCrew1
			type = HasCrew
			maxCrew = 0
			minCrew = 0
		}
		
		PARAMETER
		{
			name = PartValidation2
			type = PartValidation
			part = SCANsat_Scanner24
		}
	}	 
	
	PARAMETER
	{
		name = OrbitSet
		type = VesselParameterGroup
		
		vessel = GeoEye III
		
		title = Achieve an orbit with the following parameters
		optional = True
		completedMessage = Perfect orbit, start scanning already!
		
		// Parameter rewards
		rewardScience = 2.5
		rewardReputation = 2
		rewardFunds = 4500.0
	
		PARAMETER
		{
			name = Orbit
			type = Orbit
			targetBody = Minmus
			minApA = 248943
			maxApA = 251114
			minPeA = 248901
			maxPeA = 251036
			maxEccentricity = 0.00214
			minInclination = 76.8
			maxInclination = 77.1
			disableOnStateChange = false
		}
	}
	
	PARAMETER
	{
		name = SCANsatCoverage2
		type = SCANsatCoverage
		targetBody = Minmus
		
		// Get 50% coverage to complete
		coverage = 50.0
		scanType = Biome
		disableOnStateChange = false
	}
	
	PARAMETER
	{
		name = OrbitEndGrp1
		type = All

		title = De-Orbit Maxwell III, our previous SCANSat around Minmus
		optional = True
		
		// Parameter rewards
		rewardScience = 2
		rewardFunds = 4000
	
		PARAMETER
		{
			name = OrbitEnd
			type = VesselParameterGroup
			vessel = Maxwell III
			
			PARAMETER
			{
			    name = VesselDestroyed
			    type = VesselDestroyed
			}
		}
	}
	
	REQUIREMENT
	{
		name = All1
		type = All
	
		REQUIREMENT
		{
			name = SCANsatCoverage3
			type = SCANsatCoverage

			targetBody = Kerbin

			// Minimum coverage that must be reached before the contract is valid.
			maxCoverage = 100.0
			minCoverage = 60.0

			// The type of scan to perform.  Valid values are from SCANdata.SCANtype.
			scanType = Biome

			REQUIREMENT
			{
				name = SCANsatCoverage5
				type = SCANsatCoverage

				targetBody = Minmus

				// Minmus must be mostly mapped before the contract is valid.
				maxCoverage = 100
				minCoverage = 95.0

				// The type of scan to perform.  Valid values are from SCANdata.SCANtype.
				scanType = AltimetryLoRes
			}
			
			REQUIREMENT
			{
				name = SCANsatCoverage6
				type = SCANsatCoverage

				targetBody = Mun

				// Mun must be mostly mapped before the contract is valid
				maxCoverage = 100
				minCoverage = 95.0

				// The type of scan to perform.  Valid values are from SCANdata.SCANtype.
				scanType = AltimetryLoRes
			}
		}
	}
}
